function cohgram = xtp_cohgramc(timeseries, cohPairListID, cparams)
% This function calls chronux cohgramc for each pair of leads specified.
% Input dataset is a timeseries in the form generated by XTP:
%   - metadata field is a structure array with one cell per epoch
%   - data field is a cell array with one cell per epoch, each cell contains
%   an SxL matrix where S is the number of samples and L is the number of
%   electrode leads.
%
% cohPairListID identifies an element in the global variable
% XTP_COHERENCY_PAIRS that contains a Px2 matrix, each row indicating a
% pair of leads on which to calculate coherency. The numbers in the rows
% correspond to the column number of the lead in the input dataset.
% May enter 0 for cohPairListID to specify a single cohpair at runtime. May
% also choose to specify the cohpair itself in the second argument, as a 2
% element array.
% 
% cparams is an optional input for passing to the chronux routine - if none
% is specified the global chronux defaults (XTP_CHRONUX_PARAMS) will be
% used.
%
% output variable will contain a structure with information about when &
% how it was generated
%
%EXAMPLE: cohgram = xtp_cohgramc(timeseries, coherencyPairListID, cparams)
%
% Change Control:
% Ver   Date        Person      Change
% ----- ----------- ----------- -------------------------------------------
% 1.0   03/13/09    S.Williams  Created from xtp_coherencyc.
% 1.1   03/18/09    S. Williams default winsize & winstep = [1 1]
%                               store movingwin in the output. fixed bug in
%                               runtime assignment of cohpairs
% 1.2   03/26/09    S. Williams do not store timeseries in output structure
% 1.3   04/10/09    S. Williams reference XTP_HB_MONTAGES instead of
%                               XTP_HEADBOXES. record channel names if
%                               given.
% 1.3.1 04/13/09    S. Williams validate that cohpairs list is consistent
%                               with montage used for the timeseries
% 1.4   04/16/09    S. Williams accept movingwin as a field of cparams
% 1.5   09/20/09    S. Williams accept a single cohpair at command line
%                               instead of a cohPairListID
% ***DON'T FORGET TO UPDATE VERSION NUMBER IN CODE BELOW.***

funcname = 'xtp_cohgramc.m';
version = 'v1.5';

global XTP_CHRONUX_PARAMS XTP_COHERENCY_PAIRS XTP_HB_MONTAGES

if nargin < 3
    cparams = XTP_CHRONUX_PARAMS;
    if nargin < 2 
        fprintf(1, 'Please specify a coherency pair list:\n');
        for cpl = 1:length(XTP_COHERENCY_PAIRS)
            fprintf(1,' - Enter %d for %s (Montage = %s)\n', cpl, XTP_COHERENCY_PAIRS(cpl).name, XTP_HB_MONTAGES(XTP_COHERENCY_PAIRS(cpl).HBmontageID).name);
        end
        fprintf(1, ' - OR enter 0 to specify your own pair of leads for coherence estimates.\n');
        cohPairListID = input('Your choice: ');
    end
end

movingwin = cparams.movingwin;
if length(cohPairListID) == 2   % a cohpair specified at command line
    cohpairs = cohPairListID;
    cohPairListID = 0;
elseif cohPairListID == 0
    cohpairs = input('Which leads do you want to analyze? (Default [1 2]):');
    if isempty(cohpairs)
        cohpairs = [1 2];
    end
else
    if XTP_COHERENCY_PAIRS(cohPairListID).HBmontageID ~= timeseries.metadata(1).HBmontageID
        fprintf(1, 'ERROR: This coherency pair list does not match the montage of the timeseries.\n');
        fprintf(1, 'Please run %s with an appropriate cohpair list, or specify your own cohpairs.\n', funcname);
        return;
    end
    cohpairs = XTP_COHERENCY_PAIRS(cohPairListID).pairs;
end


cohgram.info.datatype = 'COHEROGRAM';
cohgram.info.source = inputname(1);
cohgram.info.generatedBy = funcname;
cohgram.info.version = version;
cohgram.info.rundate = clock;
cohgram.info.cparams = cparams;
% cohgram.info.movingwin = movingwin;
cohgram.info.cohPairListID = cohPairListID;
cohgram.info.cohPairList = cohpairs;
% cohgram.timeseries = timeseries;
cohgram.metadata = timeseries.metadata;
if isfield(timeseries.metadata, 'HBmontageID')
    hbmid = timeseries.metadata(1).HBmontageID;
    cohgram.info.channelNames = XTP_HB_MONTAGES(hbmid).channelNames;
else
    fprintf(1,'WARNING: no montage data provided.\n');
end

numsegs = size(timeseries.data, 2);
numCohpairs = size(cohpairs,1);
cohgram.output = cell(1,numCohpairs);

for p=1:numCohpairs
    lead1 = cohpairs(p,1);
    lead2 = cohpairs(p,2);
    
    for seg = 1:numsegs
        % coherencyc has different output variables depending on the choice of
        % errorbar calculation. output cell array has a row for each epoch
        % and a column for each coherency pair.
        switch cparams.err(1)
            case 1
                [cohgram.output{seg,p}.C cohgram.output{seg,p}.phi cohgram.output{seg,p}.S12 cohgram.output{seg,p}.S1 cohgram.output{seg,p}.S2 cohgram.output{seg,p}.t cohgram.output{seg,p}.f cohgram.output{seg,p}.confC cohgram.output{seg,p}.phistd] = cohgramc(timeseries.data{seg}(:,lead1), timeseries.data{seg}(:,lead2), movingwin, cparams);
            case 2
                [cohgram.output{seg,p}.C cohgram.output{seg,p}.phi cohgram.output{seg,p}.S12 cohgram.output{seg,p}.S1 cohgram.output{seg,p}.S2 cohgram.output{seg,p}.t cohgram.output{seg,p}.f cohgram.output{seg,p}.confC cohgram.output{seg,p}.phistd cohgram.output{seg,p}.Cerr] = cohgramc(timeseries.data{seg}(:,lead1), timeseries.data{seg}(:,lead2), movingwin, cparams);
            otherwise
                [cohgram.output{seg,p}.C cohgram.output{seg,p}.phi cohgram.output{seg,p}.S12 cohgram.output{seg,p}.S1 cohgram.output{seg,p}.S2 cohgram.output{seg,p}.t cohgram.output{seg,p}.f] = cohgramc(timeseries.data{seg}(:,lead1), timeseries.data{seg}(:,lead2), movingwin, cparams);
        end
    end
end